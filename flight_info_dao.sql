CREATE OR REPLACE FUNCTION FC_GET_FLIGHT_INFO
  (L_DESIGNATOR IN VARCHAR, L_ID_PROJECT IN INTEGER)
RETURN SYS_REFCURSOR
IS
  C1 SYS_REFCURSOR;
BEGIN
  OPEN C1 FOR
  SELECT  FI.ID_FLIGHT_INFO, FI.FLIGHT_TYPE,
          AO.IATA, AO.NAME, AO.TOWN, AO.COUNTRY, AO.ALTITUDE,
          CAO.COORDINATE_CODE, CAO.LATITUDE, CAO.LONGITUDE,
          AD.IATA, AD.NAME, AD.TOWN, AD.COUNTRY, AD.ALTITUDE,
          CAD.COORDINATE_CODE, CAD.LATITUDE, CAD.LONGITUDE,
          AIRC.ID_AIRCRAFT, AIRC.ID_AIRCRAFT_MODEL,
          AIRC.COMPANY, AIRC.MAX_CARGO, AIRC.MAX_CREW
  FROM  FLIGHT_INFO FI, AIRPORT AO, COORDINATE CAO, AIRPORT AD, COORDINATE CAD,
        AIRCRAFT AIRC
  WHERE FI.ORIGIN_AIRPORT = AO.ID_AIRPORT AND AO.ID_COORDINATE = CAO.ID_COORDINATE
    AND FI.DEST_AIRPORT = AD.ID_AIRPORT AND AD.ID_COORDINATE = CAD.ID_COORDINATE
    AND FI.ID_AIRCRAFT = AIRC.ID_AIRCRAFT
    AND FI.DESIGNATOR = L_DESIGNATOR AND FI.ID_PROJECT = L_ID_PROJECT;

  RETURN C1;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('There was no data found'||SYSDATE);
  WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE('Too many rows'||SYSDATE);
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occured'||SYSDATE);
END;
/



CREATE OR REPLACE FUNCTION FC_GET_FLIGHT_STOPS
  (L_ID_FLIGHT_INFO IN INTEGER)
RETURN SYS_REFCURSOR
IS
  C1 SYS_REFCURSOR;
BEGIN
  OPEN C1 FOR
  SELECT  A.IATA, A.NAME, A.TOWN, A.COUNTRY, A.ALTITUDE,
          C.COORDINATE_CODE, C.LATITUDE, C.LONGITUDE,
          S.MIN_STOP_MINUTES, S.DEPARTURE_TIME, S.SCHEDULED_ARRIVAL
  FROM  FLIGHT_STOP FS, STOP S, AIRPORT A, COORDINATE C
  WHERE FS.ID_STOP = S.ID_STOP
    AND S.ID_AIRPORT = A.ID_AIRPORT
    AND A.ID_COORDINATE = C.ID_COORDINATE
    AND FS.ID_FLIGHT_INFO = L_ID_FLIGHT_INFO;

  RETURN C1;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('There was no data found'||SYSDATE);
  WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE('Too many rows'||SYSDATE);
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occured'||SYSDATE);
END;
/



CREATE OR REPLACE FUNCTION FC_GET_WAYPOINTS
  (L_ID_FLIGHT_INFO IN INTEGER)
RETURN SYS_REFCURSOR
IS
  C1 SYS_REFCURSOR;
BEGIN
  OPEN C1 FOR
  SELECT  C.COORDINATE_CODE, C.LATITUDE, C.LONGITUDE
  FROM  WAYPOINT W, COORDINATE C
  WHERE W.ID_COORDINATE = C.ID_COORDINATE
    AND W.ID_FLIGHT_INFO = L_ID_FLIGHT_INFO;
  
  RETURN C1;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('There was no data found'||SYSDATE);
  WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE('Too many rows'||SYSDATE);
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occured'||SYSDATE);
END;
/



CREATE OR REPLACE FUNCTION FC_GET_CLASSES_MAX
  (L_ID_AIRCRAFT IN INTEGER)
RETURN SYS_REFCURSOR
IS
  C1 SYS_REFCURSOR;
BEGIN
  OPEN C1 FOR
  SELECT  MAX_NUMBER_PASSENGERS
  FROM  CLASS
  WHERE ID_AIRCRAFT = L_ID_AIRCRAFT;

  RETURN C1;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('There was no data found'||SYSDATE);
  WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE('Too many rows'||SYSDATE);
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occured'||SYSDATE);
END;
/



CREATE OR REPLACE FUNCTION FC_GET_FLIGHT_PATTERNS
  (L_ID_AIRCRAFT IN INTEGER)
RETURN SYS_REFCURSOR
IS
  C1 SYS_REFCURSOR;
BEGIN

  OPEN C1 FOR
  SELECT  ALTITUDE, V_CLIMB, V_DESC, R_DESC
  FROM  FLIGHT_PATTERN
  WHERE ID_AIRCRAFT = L_ID_AIRCRAFT;

  RETURN C1;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('There was no data found'||SYSDATE);
  WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE('Too many rows'||SYSDATE);
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occured'||SYSDATE);
END;
/